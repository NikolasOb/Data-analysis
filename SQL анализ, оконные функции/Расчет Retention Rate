Есть два набора данных:
Таблица orders_info_short: где поле user_id - это идентификатор пользователя, а поле event_dt - дата совершения покупки
Таблица visits_info_short: где поле user_id - это идентификатор пользователя(внешний ключ к таблице orders_info_short), поле date_start - дата посещения, включая дату первого посещения, то есть регистрации
Задача: разбить пользователей на когорты по неделям и рассчитать их удержание(Retention Rate) в 0, 1, 3, 7, 14, 21, 30 дни 2019 года

WITH t as(             -- оборачиваем весь запрос во временную таблицу
SELECT vis.user_id, 
       date(event_dt) AS event_dt,             -- преобразовываем поле в тип дата 
       min(date_start::date) OVER my_window AS date_start,              -- создаем поле с датой регистрации
       date(event_dt)-min(date_start::date) OVER my_window AS diff,              -- считаем разницу в днях от даты покупок до даты регистрации пользователей
       EXTRACT ('week' FROM min(date_start::date) OVER my_window) AS week              -- создаем поле c номером недели для формирования когорт
FROM orders_info_short ois 
JOIN visits_info_short vis ON ois.user_id=vis.user_id -- объединяем таблицу orders_info_short и visits_info_short по полю user_id
WINDOW my_window AS (PARTITION BY vis.user_id ORDER BY date_start)             -- создаем оконную для того чтобы нам вернуть только дату первого посещения, то есть дату регистрации по каждому user_id
),
t2 as( -- оборачиваем во вторую временную таблицу 
SELECT week, diff, count(DISTINCT user_id) AS cnt               -- агрегируем и считаем количество уникальных пользователей по когорте и дням активности
FROM t 
WHERE diff IN (0, 1, 3, 7, 14, 21, 30)             -- фильтруем данные только по тем дням для которых мы решили рассчитать Retention Rate
GROUP BY week, diff             -- группируем по когорте и количеству дней от даты регистрации до даты покупок
)
SELECT week,               -- преобразуем длинную таблицу в широкую посредством CASE, даем полям названия дней удержания
       max(CASE WHEN diff = 0 THEN cnt END) AS day_0,
       max(CASE WHEN diff=1 THEN cnt END) AS day_1,
       max(CASE WHEN diff=3 THEN cnt END) AS day_3,
       max(CASE WHEN diff=7 THEN cnt END) AS day_7,
       max(CASE WHEN diff=14 THEN cnt END) AS day_14,
       max(CASE WHEN diff=21 THEN cnt END) AS day_21,
       max(CASE WHEN diff=30 THEN cnt END) AS day_30
FROM t2 
GROUP BY week 

Получаем вот такую табличку удержания пользователей и делаем выводы:

week  day_0  day_1  day_3  day_7  day_14  day_21  day_30

20	170	84	55	31	21	14	14
21	166	71	44	32	18	19	19
22	218	69	53	32	24	20	9
23	183	65	40	33	20	18	7
24	189	64	51	30	20	17	12
25	198	79	50	25	20	13	15
26	242	102	61	54	27	17	18
27	264	97	60	46	22	24	17
28	206	74	42	21	18	16	18
29	160	73	47	22	23	17	13
30	178	70	28	21	12	16	10
31	228	85	64	27	21	23	9
32	201	81	58	30	23	18	17
33	246	105	74	41	13	15	11
34	204	80	33	26	22	18	16
35	258	82	64	35	23	12	12
36	209	80	49	23	15	15	14
37	203	79	39	18	21	6	14
38	277	95	70	37	23	19	23
39	315	129	66	51	32	27	17
40	291	101	69	49	31	17	8
41	228	98	45	35	28	10	
42	238	89	52	24	10		
43	283	102	61	15			
